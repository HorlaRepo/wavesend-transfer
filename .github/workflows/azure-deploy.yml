name: Build and Deploy to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch: # Allow manual triggers

env:
  AZURE_WEBAPP_NAME: wavesend-api  # Your App Service name
  REGISTRY: wavesend.azurecr.io    # Your ACR registry URL (hardcoded)
  REPOSITORY: wavesend
  IMAGE_TAG: ${{ github.run_number }}
  BACKEND_DIR: .

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Build with Maven
        working-directory: ${{ env.BACKEND_DIR }}
        run: ./mvnw clean package -DskipTests
      
      # Login to Azure first
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Use Azure CLI to log into ACR
      - name: Login to Azure Container Registry
        run: az acr login --name $(echo ${{ env.REGISTRY }} | cut -d'.' -f1)
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.BACKEND_DIR }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest,${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:buildcache,mode=max
      
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Azure logout
        run: az logout
        if: always()